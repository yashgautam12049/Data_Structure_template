class Disjointset{
    vector<int>rank,parent;
    public:
    Disjointset(int n){
        rank.resize(n+1,0);
        parent.resize(n+1,0);
        // size.resize(n+1,0);
        for(int i=0;i<=n;i++){
            parent[i]=i;
            // size[i]=i;
        }
    }
    int findUpar(int node){
        if(node==parent[node]){
            return node;
        }
        return parent[node]=findUpar(parent[node]);
    }
    void Unionbyrank(int u,int v){
        int ulp_u=findUpar(u);
        int ulp_v=findUpar(v);
        if (rank[ulp_u] < rank[ulp_v]) {
            parent[ulp_u] = ulp_v;
        }
        else if (rank[ulp_v] < rank[ulp_u]) {
            parent[ulp_v] = ulp_u;
        }
        else {
            parent[ulp_v] = ulp_u;
            rank[ulp_u]++;
        }
    }
};
